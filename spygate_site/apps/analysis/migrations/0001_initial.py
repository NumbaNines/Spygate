# Generated by Django 5.2.2 on 2025-06-08 12:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('downloads', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ErrorReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=20)),
                ('error_message', models.TextField()),
                ('stack_trace', models.TextField(blank=True)),
                ('system_info', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('release', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='downloads.release')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'error report',
                'verbose_name_plural': 'error reports',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('cpu', 'CPU Usage'), ('memory', 'Memory Usage'), ('latency', 'Network Latency'), ('fps', 'Frames Per Second'), ('load_time', 'Load Time')], max_length=20)),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('system_info', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'performance metric',
                'verbose_name_plural': 'performance metrics',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UsageSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('features_used', models.JSONField(default=list)),
                ('session_data', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'usage session',
                'verbose_name_plural': 'usage sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='UserMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('total_downloads', models.IntegerField(default=0)),
                ('total_storage_used', models.BigIntegerField(default=0)),
                ('favorite_features', models.JSONField(default=list)),
                ('system_info', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user metrics',
                'verbose_name_plural': 'user metrics',
            },
        ),
        migrations.CreateModel(
            name='FeatureUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(max_length=100)),
                ('feature_category', models.CharField(choices=[('core', 'Core Features'), ('analysis', 'Analysis Tools'), ('export', 'Export Features'), ('integration', 'Integrations')], max_length=20)),
                ('usage_count', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('success_rate', models.FloatField(default=0.0)),
                ('average_duration', models.DurationField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'feature usage',
                'verbose_name_plural': 'feature usages',
                'unique_together': {('user', 'feature_name')},
            },
        ),
    ]
