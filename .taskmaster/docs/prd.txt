### **SpygateAI: ML-Powered Football Gameplay Analysis Tool**

#### **Product Requirements Document (PRD)**

**Version**: 6.8 - Multi-Game Foundation Integration
**Date**: June 7, 2025
**Status**: Final Review

### **1. Executive Summary**

SpygateAI is an AI-powered football analysis tool designed to give competitive players a definitive edge in high-stakes tournaments like the **Madden Championship Series (MCS)**. With over $1 million on the line in the MCS, the difference between winning and losing comes down to preparation, strategy, and exploiting opponent weaknesses—a process that is currently manual, tedious, and inefficient.

**The Core Problem**: Players competing in the MCS open ladders and other tournaments spend countless hours manually reviewing gameplay to find specific situations and scout opponents, detracting from time that could be spent practicing and honing strategy.

**The SpygateAI Solution**: An intelligent engine that automates the discovery and bookmarking of key **game situations** using HUD analysis, and will later incorporate advanced on-field formation analysis. SpygateAI is purpose-built on a **multi-game architecture foundation** to be the essential preparation tool for any player serious about competing for real prize money across EA Sports football titles, transforming hours of manual work into automated, actionable insights that transfer between games.

### **2. User Research Foundation**

#### **2.1 Primary User: The MCS Professional**

**Profile**: Actively competes in the Madden Championship Series (MCS) and major tournaments on platforms like Players Lounge. Their livelihood or significant income is tied to their performance. Practices 8+ hours daily.

**Current Pain Points**:
- The pressure of a $1M+ prize pool demands flawless preparation
- Manually scouting dozens of potential opponents in an open ladder is nearly impossible
- Forgetting a specific counter to a niche strategy can cost tens of thousands of dollars
- Needs to optimize every second of their preparation time
- **NEW**: Strategies learned in previous game versions are lost when new releases launch

**Success Definition**: "This tool is indispensable for my MCS tournament prep across all EA football games"

#### **2.2 Secondary User: The Aspiring Competitor**

**Profile**: A highly skilled player grinding in the MCS open ladders or weekly online tournaments. They are serious about improving and dream of qualifying for a live event and winning prize money.

**Current Pain Points**:
- Doesn't know how the pros prepare and feels at a strategic disadvantage
- Struggles to identify their own patterns and weaknesses that prevent them from breaking into the top tier
- Overwhelmed by the volume of games they need to play and review to climb the ladder
- **NEW**: Loses all strategic knowledge when transitioning between EA football games

**Success Definition**: "This tool helped me qualify for the MCS Elimination phase and stay competitive across game releases"

#### **2.3 Current Workflow Analysis**

**Opponent Preparation** (15 min assessment → hours finding solutions):
1. Source footage from YouTube, Twitch, previous recordings
2. Manually identify key formations and strategies
3. Search for counters through mental recall, practice mode testing
4. Organize solutions in folders (often forgotten or lost)
5. Test solutions through 5-15 practice games
6. **NEW**: Repeat entire process for each EA football game

**Self-Analysis After Loss**:
1. Review recorded gameplay manually
2. Identify mistakes and missed opportunities
3. Try to understand opponent's strategy
4. Manually correlate mistakes with specific situations
5. **NEW**: Cannot leverage learnings across different EA football titles

#### **2.4 Competitive Landscape**

While the market for football gaming analysis is emerging, it is currently fragmented into two main categories:

- **Data-Heavy Tools (e.g., Fictional 'MaddenMetrics Pro'):** These tools provide massive spreadsheets of statistical data but lack intuitive interfaces and actionable insights. They tell you *what* happened but not *why* or *what to do next*. They are powerful but have a very steep learning curve. **Limited to single games.**

- **Content-Driven Platforms (e.g., YouTube/Patreon Gurus):** These platforms provide excellent strategic advice but are not personalized. A user has to manually watch hours of content to find a solution to *their specific problem*. **Game-specific content doesn't transfer.**

**SpygateAI's Unique Position:** SpygateAI fits directly between these two extremes. It offers the data-driven power of an analytics tool but delivers it with the context and actionable solutions of a strategy guru, all personalized to the user's own gameplay. The **multi-game intelligence foundation** provides a long-term competitive moat that neither of these alternatives can offer.

### **3. Product Vision & Core Features**

#### **3.0 Multi-Game Architecture Foundation**

**Universal Football Intelligence**: SpygateAI is built on game-agnostic football concepts that transfer across EA Sports titles, creating compound intelligence value over time.

##### **Game-Agnostic Data Model**

```python
# Universal football concepts that work across all games
universal_concepts = {
    "formation_families": {
        "trips_concept": {
            "madden_25": "Shotgun Trips TE",
            "cfb_25": "Spread Trips Right",
            "madden_26": "TBD - auto-mapped on release"
        }
    },
    "strategic_concepts": {
        "cover_2_defense": {
            "core_principle": "2_safeties_deep_coverage",
            "game_implementations": {
                "madden_25": "Cover 2 Man/Zone",
                "cfb_25": "Cover 2 Match",
                "effectiveness_data": "cross_game_comparison"
            }
        }
    }
}
```

##### **Cross-Game Intelligence Benefits**
- **Day-1 Advantage**: Strategy migration for new game releases
- **Historical Pattern Recognition**: Multi-year meta evolution analysis
- **Cross-Platform Insights**: NFL concepts applied to college football
- **Compound Data Value**: Intelligence improves with each game version

#### **3.1 The Unified Adaptive Interface Philosophy**

**Design Principle**: "One interface that naturally adapts to user engagement level through progressive disclosure"

#### **3.2 P1: The Situational Analysis MVP**

The primary goal of the initial launch is to deliver immediate value by solving the most time-consuming aspect of game review: finding specific situations. The MVP will focus exclusively on high-accuracy, HUD-based analysis to automatically tag and organize gameplay footage **with multi-game support from day one**.

##### **A. Unified Analysis Engine (MVP Focus)**

**The "Analyze Any Footage" Workflow**:

1. **Effortless Video Import**: Users can get footage into the system via multiple paths:
   - **Drag-and-Drop**: For existing video files on their computer
   - **Built-in Recorder**: A simple, one-click gameplay recorder
   - **API Integration**: Connect to Twitch/YouTube to pull recent VODs or clips
   - **Folder Monitoring**: Point the app to a local folder for automatic import of new recordings

2. **Smart Upload Context Detection with Game Auto-Detection**:

```
[User initiates import]

Auto-detected: Madden NFL 25

"What's this clip?" (One-click selection)
├── 🎮 My gameplay     [Default selection]
├── 👁️ Studying opponent
├── 📚 Learning from pros
```

3. **Universal Situational Data Extraction (MVP)**:

```
Analysis Complete. Found 12 key situations.

Clip 1 (01:32): 3rd & 8, 4th QTR, Down by 4
├── 🏷️ [Click] Tag as "Clutch Moment"
├── 📋 [Click] Add to "4th Quarter Comeback" Gameplan
├── 🔄 [Click] Apply to CFB 25 Strategy
├── ▶️ [Click] Play Clip
└── 🗑️ [Click] Ignore

Clip 2 (04:15): 1st & 10, Red Zone (Opp 15 YL)
├── 🏷️ [Click] Tag as "Red Zone Offense"
├── 📋 [Click] Add to "Red Zone" Gameplan
├── 🔄 [Click] Cross-Game Compatible
└── ▶️ [Click] Play Clip
```

*(Note: Advanced formation analysis like "Shotgun Bunch" is planned for Phase 2, but will include cross-game mapping).*

##### **B. Solution Database & Gameplan Builder**

**The Strategic Memory System for Tournament Play**:

1. **Opponent-Specific Gameplans**: A key feature will be the ability to create gameplans tailored to a specific opponent's username, consolidating all analysis and effective counters for an upcoming tournament match **across multiple EA football games**.

2. **Situation-Centric Library with Cross-Game Intelligence**:

```
Solutions/
├── Opponent: ProPlayer123/
│   ├── Tendencies on 3rd & Long (Madden 25)
│   ├── Go-to Red Zone Plays (CFB 25)
│   ├── Cross-Game Patterns
│   └── Counters that worked
├── By Situation/
│   ├── 3rd & Long/
│   │   ├── Madden 25 Solutions
│   │   ├── CFB 25 Solutions
│   │   └── Universal Concepts
│   ├── Red Zone Offense/
│       ├── Game-Specific Strategies
│       └── Transferable Concepts
```

#### **3.4 Community Intelligence System (Phase 2 Feature)**

**Value Proposition**: User uploads create anonymized community data that powers personalized recommendations for casual players, creating a competitive moat through network effects **across all supported EA football games**.

#### **3.5 Advanced Features (P2/P3)**

- Real-time formation usage trending **within the current MCS meta across games**
- "Formation X usage increased 40% this week in Madden, stable in CFB" alerts
- **Tournament Prep Mode**: A dedicated workflow to analyze 3-5 gameplay files from a single opponent to generate a pre-match scouting report
- **Cross-Game Strategy Migration**: Automatic strategy porting between EA football titles
- Pro player strategy adoption tracking across games

### **4. Technical Architecture**

#### **4.1 Initial Data Seeding & Day-1 Value**

To ensure SpygateAI provides immediate value, the system's initial intelligence will be built on a "Genesis Database" **with multi-game annotation**.

- **Manual Annotation**: As confirmed, this process will involve the manual annotation of a large library of existing Madden **and College Football** clips. The initial focus will be on tagging clips with their game situation (down, distance, score, etc.) to train and validate the HUD analysis models **across both games**.
- **Cross-Game Validation**: Universal concepts will be validated across both Madden 25 and CFB 25 to ensure transferability.
- **Handling Data Scarcity**: We acknowledge that clips for rare situations (e.g., 2-point conversions, Hail Marys) will be limited. This will be addressed by focusing initial model training on common, high-impact situations (e.g., 3rd downs, red zone plays) and by being transparent with the user about the confidence level of analysis on rare events (see Risk Mitigation 8.2).

#### **4.2 Adaptive Performance System**

**Hardware Tier Auto-Detection** ensuring universal compatibility **across all supported games**:

| Tier | Hardware Requirements | Pro Features | Learning Features | Supported Games | Target Performance |
|------|----------------------|--------------|-------------------|-----------------|-------------------|
| **Minimum** | 8GB RAM, 4-core CPU, Integrated GPU | Core analysis, strategy database | Full learning mode, simple explanations | All games, basic detection | 0.3-0.5 FPS analysis |
| **Standard** | 12GB+ RAM, GTX 1650+, 4-6 core CPU | + Formation detection | + Visual formation guides | All games, enhanced detection | 1.0 FPS analysis |
| **Premium** | 16GB+ RAM, RTX 3060+, 6+ core CPU | + Advanced formations, real-time | + Pro strategy learning | All games, full analysis | 1.5-2.0 FPS analysis |
| **Professional** | 32GB+ RAM, RTX 4080+, 8+ core CPU | + Cross-game intelligence | + Historical meta analysis | All games, experimental features | 2.0+ FPS analysis |

#### **4.3 Universal Detection Pipeline**

```python
def analyze_any_football_game(video_input):
    # 1. Auto-detect game version
    game_version = detect_game_type(video_input)  # madden_25, cfb_25, madden_26

    # 2. Hardware-adapted processing
    performance_tier = detect_hardware_capabilities()

    # 3. Universal concept extraction
    football_concepts = extract_universal_concepts(video_input)

    # 4. Game-specific mapping
    game_analysis = map_to_game_context(football_concepts, game_version)

    # 5. Cross-game intelligence application
    enhanced_insights = apply_historical_intelligence(game_analysis, all_games_data)

    return create_intelligent_recommendations(enhanced_insights)
```

#### **4.4 Technology Stack**

- **Desktop**: PyQt6 with adaptive video processing
- **AI/ML**: YOLOv10+ (or latest generation) + Enhanced OpenCV pipeline **with game-agnostic training**
- **Database**: SQLite for local storage, PostgreSQL for cloud sync **with cross-game schema**
- **Video Processing**: FFmpeg with GPU acceleration support
- **Cloud**: Optional AWS integration for advanced processing

#### **4.5 AI/ML Task Delegation: YOLO vs. OpenCV**

To achieve our analytical goals, YOLO and OpenCV will perform distinct but complementary tasks. They work as a team: YOLO is the robust "spotter" that finds where to look, and OpenCV is the efficient "analyst" that interprets what's there.

**YOLO's Role: The 'What & Where' Detector** YOLO's core responsibility is high-speed, robust object detection. It is used for tasks where the object's appearance or position might vary.

- **Primary Player Detection**: Identify the location (via bounding boxes) of all 22 players on the field. This is its main task, as players are constantly moving and changing shape.
- **Initial HUD Localization**: On the first frame of a clip or when the scene changes (e.g., after a replay), YOLO will robustly find the *regions* of interest on the screen, such as the score bug and the play-art box. It is resilient to changes from game patches or different modes.
- **Game Detection**: Identify which EA football game is being analyzed for proper context mapping.

**OpenCV's Role: The 'How & Why' Analyzer** OpenCV is a versatile computer vision library that will execute a series of targeted, highly efficient tasks, often using the locations provided by YOLO.

- **Preprocessing**: Before analysis, OpenCV will handle tasks like resizing frames and converting color spaces to optimize them for the YOLO model.
- **Efficient HUD Analysis (Post-YOLO)**: Instead of re-running YOLO on every frame, we use OpenCV for continuous, lightweight analysis of the static HUD regions that YOLO found.
  - **HUD Data Extraction (OCR)**: On every frame, OpenCV will run fast Optical Character Recognition (OCR) *only on the small score bug region* to read the game clock, score, and down.
  - **Play Art Identification (Template Matching)**: Similarly, it will use efficient Template Matching *only on the play-art region* to identify the specific play being run.
- **Contextual Player Analysis**:
  - **Formation Recognition**: After YOLO returns the coordinates of all players, OpenCV will analyze their *spatial relationships* and geometry to classify the offensive and defensive formations.
  - **Player Tracking & Route Analysis**: Using the bounding boxes from YOLO as a starting point, OpenCV algorithms will follow players from frame to frame to identify routes and play concepts.

#### **4.6 Non-Functional Requirements**

Beyond the core features, the system must adhere to the following principles:

- **Security:** All user data, especially for cloud-synced accounts, must be encrypted both in transit (TLS 1.2+) and at rest (AES-256). User authentication will be handled via secure, standard protocols (e.g., OAuth 2.0).
- **Reliability:** The core analysis engine must have a success rate of over 99%. In the event of a processing failure, the application must fail gracefully, notify the user with a clear error message, and not lose the original video file.
- **Scalability:** The cloud infrastructure (for Phase 2+ features) will be designed on a serverless architecture (e.g., AWS Lambda, S3, PostgreSQL Aurora Serverless) to automatically scale with user load, ensuring consistent performance for 100 users or 100,000 users.

**For the detailed mapping of in-game data to the variables used in this PRD, please see Appendix A: Technical Data Mapping.**

### **5. User Experience Design**

#### **5.1 Critical User Journeys**

##### **Journey 1: Multi-Game Strategy Migration**

```
User Scenario: "Madden 26 just released, I want to use my Madden 25 strategies"
│
├── SpygateAI: "Analyzing your Madden 25 gameplan for Madden 26 compatibility..."
└── Output: "Day-1 gameplan ready with 12 transferred strategies"
```

##### **Journey 2: Cross-Game Intelligence**

```
User Scenario: "I want to use NFL strategies in College Football 25"
│
├── Upload College Football 25 gameplay
└── Output: "NFL-informed college strategy with game-specific adjustments"
```

##### **Journey 3: Opponent Preparation**

```
User Action: "I'm playing ProPlayer123 tomorrow"
│
├── SpygateAI: "Found 3 recent games, analyzing..."
└── Output: "Ready to practice these 5 key counters"
```

##### **Journey 4: New Player Improvement**

```
User Scenario: "I keep losing to my friend who always runs the same plays"
│
├── Upload recent loss footage
└── Track improvement: "You stopped 60% more runs last game!"
```

##### **Journey 5: First-Time User Onboarding**

```
User Scenario: "I just downloaded SpygateAI to get better. What do I do now?"
│
├── App Launch: Clean interface with a clear call to action.
└── Output: User immediately understands the core value proposition without needing to play another game first.
```

---

### **6. Success Metrics & Validation**

#### **6.1 User Success Metrics by Type**

**Pro Player Success Metrics**:
- **Time Savings**: 70% reduction in opponent prep time
- **Win Rate Improvement**: Measurable increase in competitive success
- **Cross-Game Value**: Successful strategy migration between EA football games

**Casual Player Success Metrics**:
- **Skill Improvement**: 30%+ win rate increase against similar opponents
- **Understanding**: "I finally understand why I was losing"
- **Multi-Game Competency**: Success across multiple EA football titles

#### **6.2 Technical Performance Metrics**

**Phase 1 (MVP) Metrics**:
- **HUD Detection Accuracy**: 95%+ accuracy for situational data (down, distance, clock, score) **across Madden 25 and CFB 25**
- **Game Detection Accuracy**: 99%+ accuracy in identifying which EA football game is being analyzed
- **Processing Speed**: Meet tier-specific FPS targets for HUD analysis
- **User Adoption**: 50+ active users using the situational tagging feature

**Phase 2 Metrics**:
- **Formation Detection Accuracy**: 85%+ formation recognition across all tiers **and games**
- **Cross-Game Mapping Accuracy**: 90%+ accuracy in translating concepts between games
- **Retention**: 80%+ of Phase 1 users adopt formation analysis features

---

### **7. Development Roadmap (Revised for Multi-Game)**

This roadmap is revised to prioritize a high-value, low-risk MVP first **with multi-game architecture from day one**.

#### **Phase 0: Multi-Game Foundation (June 7-14, 2025)**
**Goal**: Establish universal architecture supporting multiple EA football games
**Investment**: 45 hours ($2,250)
**Deliverables**:
- ✅ Game-agnostic data architecture
- ✅ Adaptive HUD detection (Madden 25 primary, CFB 25 compatible)
- ✅ Universal game detection pipeline
- ✅ Cross-game strategy mapping framework
- ✅ Multi-game Genesis Database annotation tools

#### **Phase 1: Situational Analysis MVP (Current Focus)**
**Goal**: Launch a tool that saves users time by automatically finding and organizing key game situations **across EA football games**
**Investment**: 40 hours ($2,000)
**Deliverables**:
- ✅ High-accuracy **HUD Analysis Pipeline** (OpenCV for OCR/Template Matching) **with multi-game support**
- ✅ Core application infrastructure: video import, timeline UI, clip bookmarking
- ✅ **Situational Gameplan Builder** with cross-game strategy organization
- ✅ Manual annotation tools for building the Genesis Database **across games**
- ❌ **Deferred**: On-field player tracking and formation recognition AI

#### **Phase 2: Advanced Formation Intelligence**
**Goal**: Introduce AI-driven formation recognition to provide deeper strategic insights **with cross-game mapping**
**Investment**: 45 hours ($2,250)
**Deliverables**:
- ✅ **YOLOv10+ On-Field Player Detection** pipeline **with game-agnostic training**
- ✅ OpenCV logic for formation classification based on player positions
- ✅ Integration of formation data into the UI, analysis, and recommendations
- ✅ **Cross-game intelligence and strategy migration tools**

#### **Phase 3: Predictive & Community Analytics**
**Goal**: Leverage aggregated data to provide predictive insights and build a community-powered strategic moat **across all EA football games**
**Investment**: 30 hours ($1,500)
**Deliverables**:
- ✅ Opt-in community intelligence system **with cross-game analytics**
- ✅ Historical meta-evolution analysis **across game versions**
- ✅ Predictive insights for new game releases

---

### **8. Risk Mitigation**

#### **8.1 User Adoption Risks**
**Risk**: Pro players resistant to new tools
**Mitigation**: Beta program with respected pros, proven time savings demonstration

#### **8.2 Technical Risks**
**Risk**: Formation detection accuracy insufficient (Moved to Phase 2)
**Mitigation**: Hybrid CV + YOLO approach, continuous model improvement.

**Risk**: Performance issues on lower-end hardware
**Mitigation**: Adaptive tier system ensures functionality. Phase 1's focus on HUD analysis is less computationally intensive, reducing this risk for the MVP.

**Risk**: **Multi-Game Complexity**
**Mitigation**: Universal architecture designed from day one, incremental game addition, shared concept validation.

**Risk (NEW): Data Scarcity for Rare Events**
- **Risk**: The accuracy of analysis for infrequent situations (e.g., 2-point conversions, specific trick plays) may be low due to a lack of sufficient training data from annotated clips.
- **Mitigation**:
  1. **Prioritization**: Focus model development and training on the most common and strategically important situations (3rd downs, red zone, 2-minute drill) first.
  2. **UI Transparency**: The interface will clearly display a confidence score for its analysis. For rare events, it may state "Experimental analysis due to limited data" to manage user expectations.
  3. **Rule-Based Fallbacks**: For events too rare for a reliable AI model, we can use simpler, rule-based heuristics to provide general strategic advice.

---

### **9. Financial Projections**

#### **9.1 Multi-Game Revenue Model**
**Tier-Based Subscription with Cross-Game Value**:

**Free Tier** (Entry point): Basic situational analysis for aspiring players **in one chosen game**.

**Premium Tier** ($19.99/month - For the Serious Grinder): Unlimited analysis, gameplan builder, and opponent analysis tools for players climbing the MCS ladder **across all supported EA football games**.

**Professional Tier** ($39.99/month - For the MCS Pro): All features plus advanced analytics, historical meta-data, priority access, and **cross-game strategy migration**. The investment is minimal compared to the potential winnings in the MCS and other cash prize tournaments, making this a clear value proposition.

#### **9.2 Updated Investment Summary**

**Core Development** (Phases 0-1):
- **Phase 0**: $2,250 (45 hours) - Multi-game foundation
- **Phase 1**: $2,000 (40 hours) - Multi-game MVP
- **Core Platform Total**: $4,250 (85 hours)

**Advanced Features** (Phase 2-3):
- **Phase 2**: $2,250 (45 hours) - Cross-game formation intelligence
- **Phase 3**: $1,500 (30 hours) - Predictive analytics across games
- **Advanced Total**: $3,750 (75 hours)

**Total Investment**: $8,000 (160 hours) - includes full multi-game architecture

---

### **10. Conclusion**

SpygateAI represents the first **multi-game football intelligence platform** built specifically for competitive players across EA Sports titles. By solving core pain points of strategy development and opponent preparation while creating **transferable intelligence across game versions**, SpygateAI transforms from a single-game tool into an essential long-term competitive advantage.

**Key Differentiators**:
- **Universal Football Intelligence**: Strategies transfer across Madden NFL, College Football, and future releases
- **Day-1 Advantage**: Immediate competitive advantage for every new game release
- **Cross-Game Strategy Migration**: Never lose strategic knowledge when games update
- **Compound Intelligence Value**: Each game analysis improves insights across all games

---

### **11. Go-to-Market Strategy**

Our launch strategy will be laser-focused on the competitive ecosystem to maximize impact and credibility **across EA football games**.

1. **Phase 1 (MVP Launch - The MCS Beachhead):**
   - **Closed Beta**: Seed the initial user base with a hand-picked group of 10-15 trusted MCS competitors and streamers. Their feedback will be crucial, and their testimonials and on-stream usage will serve as powerful social proof.
   - **Content Marketing**: Create high-quality YouTube content titled "How to Prep for MCS with SpygateAI" and "Analyzing Your Ladder Opponent in 5 Minutes **Across All EA Football Games**."

2. **Phase 2 (Growth & Community Dominance):**
   - **Tournament Partnerships**: Form official partnerships with third-party tournament organizers like Players Lounge, offering SpygateAI as a perk for their premium members or integrating it into their broadcasts.
   - **Community Hub**: Establish the official Discord as *the* place for data-driven strategic discussion, separate from more casual communities. Host "Strategy Sessions" with pros **covering multiple EA football games**.

3. **Phase 3 (Scaling):**
   - **Hyper-Targeted Advertising**: Run ad campaigns during major MCS broadcast events on Twitch and YouTube, targeting viewers of official Madden streams.
   - **Pro Affiliate Program**: Create a lucrative affiliate program for MCS-level pros who use the tool to create content, giving them a new revenue stream and driving adoption.

---

### **Appendix A: Technical Data Mapping**

| PRD Variable / Concept                      | Data Source                     | Extraction Method / Definition                                                                                             | Example Value                                |
| ------------------------------------------- | ------------------------------- | -------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------- |
| `clip_duration`                             | Video File Metadata             | Use FFmpeg/FFprobe to read the duration from the video file's header data upon import.                                     | `135` (seconds)                              |
| `Formation Detected` ('Shotgun Bunch')      | AI Vision Pipeline              | YOLO detects player bounding boxes. OpenCV analyzes the spatial geometry and counts players on each side of the center.    | `"Shotgun Bunch"`                            |
| `Game Situation` ('3rd & Long')             | HUD Analysis (OCR)              | OpenCV performs OCR on the down & distance text box identified by YOLO. `Down == 3`, `Distance >= 7`.                       | `"3rd & 12"`                                 |
| `Play Result` ('Struggle' / 'Success')      | Combined Field & HUD Analysis   | Track ball carrier's starting and ending yard line. Compare `yards_gained` to `Distance` from HUD. `Struggle` if unsuccessful. | `Struggle`                                   |
| `Solution Success Rate` ('73%')             | Aggregated Anonymous Database   | `(SUM(successful_plays) / COUNT(total_plays)) * 100` for a specific counter-play vs a specific formation.                   | `73.4`                                       |
| `user.clicks_for_details` (in `user_behavior`) | Local User Profile Database     | An event listener on UI buttons (e.g., "[Click] Why it failed") increments a counter in the user's local SQLite database.   | `true` or `8` (count)                        |
| `user.saves_strategies_frequently`          | Local User Profile Database     | A derived metric. `COUNT(strategies WHERE user_id = X)` is checked against a predefined threshold.                           | `true`                                       |
| `analysis_result` (object)                  | AI Analysis Engine              | A structured object/dictionary containing the output of a clip analysis.                                                   | `{ formation: "...", situation: "...", ... }` |
| `Game Version` ('madden_25')                | HUD Analysis                    | Analyze the unique visual elements of the score bug or menu logos to classify the game title and version.                  | `"madden_25"` or `"cfb_25"`                  |
